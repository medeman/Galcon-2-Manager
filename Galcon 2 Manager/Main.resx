<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /v9Bo/7/QaP+/0Gj/v9Bo/7/QaP+/0Gj/v9Bo/7/QaP+/z+h/P8rkej/D0+C/wEKEf8AAADuAAAAbwAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAAAP8Zaq3/Q6X+/0Ol
        /v9Dpf7/Q6X+/0Ol/v9Dpf7/Q6X+/0Ol/v9Dpf7/Q6X+/0Ol/v9Dpf7/Q6X+/0Ol/v89oPn/JIXX/wo5
        X/8AAgT/AAAA1gAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA/xlq
        rf9Fp/7/Raf+/0Wn/v9Fp/7/Raf+/0Wn/v9Fp/7/Raf+/0Wn/v9Fp/7/Raf+/0Wn/v9Fp/7/Raf+/0Wn
        /v9Fp/7/OZ70/xx1vv8GJD3/AAAA/wAAALUAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAAD/GWut/0ep/v9Hqf7/R6n+/0ep/v9Hqf7/R6n+/0ep/v9Hqf7/R6n+/0ep/v9Hqf7/R6n+/0ep
        /v9Hqf7/R6n+/0ep/v9Hqf7/Rqj9/zOZ7/8UX5z/AxMg/wAAAPkAAACMAAAADwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIwAAAP8aa63/Sav+/0mr/v9Jq/7/Sav+/0mr/v9Jq/7/Sav+/0mr/v9Jq/7/Sav+/0mr
        /v9Jq/7/Sav+/0mr/v9Jq/7/Sav+/0mr/v9Jq/7/Sav+/0Wo+/8skuX/Dkl4/wEHDP8AAADoAAAAOAAA
        AAAAAAAAAAAAAAAAAAAAAAAjAAAA/xprrf9Lrf7/S63+/0ut/v9Lrf7/S63+/0ut/v9Lrf7/S63+/0ut
        /v9Lrf7/S63+/0ut/v9Lrf7/S63+/0ut/v9Lrf7/S63+/0ut/v9Lrf7/S63+/0ut/v9Cpvf/I4PQ/wUd
        MP8AAAC2AAAAAAAAAAAAAAAAAAAAAAAAACMAAAD/Gmut/06w/v9OsP7/TrD+/06w/v9OsP7/TrD+/06w
        /v9OsP7/TrD+/06w/v9OsP7/TrD+/06w/v9OsP7/TrD+/06w/v9OsP7/TrD+/06w/v9OsP7/TrD+/z6j
        9P8cdLv/BBYk/wAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAIwAAAP8bbK3/ULL+/1Cy/v9Qsv7/ULL+/1Cy
        /v9Qsv7/ULL+/1Cy/v9Qsv7/ULL+/1Cy/v9Qsv7/ULL+/1Cy/v9Qsv7/ULL+/1Cy/v9Qsv7/ULL+/0er
        +P8niNX/Cjhd/wACA/8AAADTAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA/xtsrf9StP7/UrT+/1K0
        /v9StP7/UrT+/1K0/v9StP7/UrT+/1K0/v9StP7/UrT+/1K0/v9StP7/UrT+/1K0/v9StP7/UrT+/06x
        +/8xl+f/D05//wEJD/8AAADtAAAAbQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAAD/G2yt/1S2
        /v9Utv7/VLb+/1S2/v9Utv7/VLb+/1S2/v9Utv7/VLb+/1S2/v9Utv7/VLb+/1S2/v9Utv7/VLb+/1O1
        /f88ovD/FmWk/wQWJf8AAAD7AAAAlQAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAA
        AP8cba3/Vrj+/1a4/v9WuP7/Vrj+/1a4/v9WuP7/Vrj+/1a4/v9WuP7/Vrj+/1a4/v9WuP7/Vrj+/1a4
        /v9Hq/X/IXzE/wcpRP8AAAD/AAAAvAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAjAAAA/xxtrf9Yuv7/WLr+/1i6/v9Yuv7/WLr+/1i6/v9Yuv7/WLr+/1i6/v9Yuv7/WLr+/1i6
        /v9Qs/n/LI/c/ws+Zv8AAwb/AAAA3AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACMAAAD/HG2t/1q8/v9avP7/Wrz+/1q8/v9avP7/Wrz+/1q8/v9avP7/Wrz+/1q8
        /v9Xufz/OJ7q/xFUiv8CDBT/AAAA8gAAAHgAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAAAP8cba3/XL7+/1y+/v9cvv7/XL7+/1y+/v9cvv7/XL7+/1y+
        /v9bvv3/Q6nx/xpsrf8EGy3/AAAA/QAAAJ8AAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA/x1urf9ewP7/XsD+/17A/v9ewP7/XsD+/17A
        /v9ewP7/T7P2/yWDy/8IL07/AAAA/wAAAMYAAAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAAD/HW6t/1/C/v9fwv7/X8L+/1/C
        /v9fwv7/WLz6/zKX4f8NQ3D/AQUJ/wAAAOMAAABcAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAAAP8dbq3/YcP+/2HD
        /v9hw/7/X8H9/z+l7f8UW5T/Ag8b/wAAAPYAAACDAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA/x1u
        rf9ixf7/YsX+/0qw8/8edLb/BSA1/wAAAP4AAACrAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAAD/HW+t/1a69/8qitL/CjRX/wABAv8AAADQAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEAAAAP0PSHX/Dkl5/wEIDf8AAADpAAAAZgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAkwAAAP8AAAD5AAAAjgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAXgAAADsAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////h////4H///+A////gD///4AP//+AB///gAH//4AAf/+AA
        B//gAAP/4AAA/+AAAD/gAAAP4AAAB+AAAAPgAAAD4AAAB+AAAB/gAAA/4AAA/+AAA//gAA//4AAf/+AA
        f//gAf//4AP//+AP///gP///4P///+H/////////
</value>
  </data>
</root>